one -->

#include <cmath>
bool rightTriangle(int x, int y, int z) {
	  if(x <= 0 || y <= 0 || z <= 0) return false;
    if(x == y && y == z) return false;
	
    std::vector<int> arr{x, y, z};    
    int c{*max_element(arr.begin(), arr.end())};
    int a{*min_element(arr.begin(), arr.end())};
    int b{0};
    
    if(arr[0] != a && arr[0] != c) b = arr[0];
    if(arr[1] != a && arr[1] != c) b = arr[1];
    if(arr[2] != a && arr[2] != c) b = arr[2];
    
    return pow(a,2) + pow(b,2) == pow(c,2);
}

--------------------------------------------------

two-->

bool rightTriangle(int x, int y, int z) {
	if(x<=0 || y<=0 || z<=0)return false;
	std::vector<int>v{x,y,z};
	std::sort(v.begin(),v.end());
	return v[0]*v[0]+v[1]*v[1]==v[2]*v[2];
}

--------------------------------------------------

three -->

bool rightTriangle(int x, int y, int z)
{
	if (x <= 0 || y <= 0 || z <= 0) return false;
	int px = x * x, py = y * y, pz = z * z;
	return px + py == pz || px + pz == py || py + pz == px;
}
