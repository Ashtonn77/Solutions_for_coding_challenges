one -->

#include <regex>
#include <iterator>

std::string first(std::string str){
return str.substr(0,1);
}

std::string last(std::string str){
return str.substr(str.length() - 1);
}

std::string middle(std::string str){
    return str.substr(1, str.length() -2);
}


bool isPalindrome(std::string str) {
    std::regex s ("[^a-zA-Z0-9]");
    std::string x;
    std::regex_replace(std::back_inserter(x), str.begin(),str.end(), s, "");
    transform(x.begin(), x.end(), x.begin(), ::tolower);
    if(x.length() <= 1) return true;
    if(first(x) != last(x)) return false;
    return isPalindrome(middle(x));
}
