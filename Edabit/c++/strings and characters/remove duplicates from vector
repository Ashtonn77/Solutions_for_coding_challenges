one -->

#include <algorithm>

std::vector < std::string > removeDups (std::vector < std::string > arr)
{
  std::vector < std::string > brandNew;
		for (auto x:arr) {
			if (std::find (brandNew.begin(), brandNew.end(), x) 
					!= brandNew.end())
				continue;
		 else
		brandNew.push_back(x);
		}
  return brandNew;
}


--------------------------------------------------------------------------

two -->

#include <set>

std::vector<std::string> removeDups(std::vector<std::string> arr) {
	std::set<std::string> s;
  std::vector<std::string> new_arr;
  
  for (const std::string& str : arr)
  {
    if (s.insert(str).second)
    	new_arr.push_back(str);
  }
  
  return new_arr;
}

----------------------------------------------------------------------

three -->

std::vector<std::string> removeDups(std::vector<std::string> arr) {
	for(int i = 0; i < arr.size(); i++) {
		arr.erase( std::remove(arr.begin()+(i+1), arr.end(), arr[i]), arr.end() );
	}
	return arr;
}
