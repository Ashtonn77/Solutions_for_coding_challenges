/////////////////////////////////////////////////////////////////////////////////////////////
create a dynamic array thats the size of one array multiplied by the size of another array.
each elemet in this new array must be the value of one element in one array multiplied by one element in another array.
the below example will output: 10,20,30,40,50,20,40,60,80,100,30,60,90,120,150;
/////////////////////////////////////////////////////////////////////////////////////////////

void print(int arr[], int s){
    for(int i = 0; i < s; i++){
        std::cout << arr[i] << " ";
    }
}

//end print function

int *apply_all(int arr1[], int s1, int arr2[], int s2){
    int s3{s1 * s2};
    int *arrPtr = new int[s3];
    int multi{1};
    int cnt{0};

    for(int i = 0; i < s2; i++){
        for(int j = 0; j < s1; j++){
            multi = arr1[j] * arr2[i];
            arrPtr[cnt] = multi;
            cnt++;
        }
    }

        return arrPtr;

}//end apply all function

int main(){

    int array1[] {1,2,3,4,5};
    int array2[] {10,20,30};
    //int arrOneSize{5};
   // int arrTwoSize{3};

    int *results = apply_all(array1, 5, array2, 3);


    print(results, 15);


   return 0;

}

