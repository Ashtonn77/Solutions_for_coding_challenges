one -->

std::string removeLeadingTrailing(std::string n) {
	 if((n.find('.')) > n.length()) return std::to_string(stoi(n));
    while(n[n.length() - 1] == '0'){
        n = n.substr(0, n.length() - 1);
    }
    reverse(n.begin(), n.end());
    while(n[n.length() - 1] == '0'){
        n = n.substr(0, n.length() - 1);
    }
    reverse(n.begin(), n.end());
   if(n.length() == 1 && n == ".") return "0";
   if(n[0] == '.') return "0" + n;
   if(n.back() == '.') return n.substr(0,n.length()-1);
   return n;
}

--------------------------------------------------

two -->

std::string removeLeadingTrailing(std::string n) {
	//Check for just zero(s)
	double number = stod(n);
	if (number == 0) {
		return "0";
	}
	//Remove leading zeros
	int i = 0;
	while (n[i] == '0') {
		i++;
	}
	n.erase(0, i);
	//Remove trailing zeros
	size_t found = n.find_first_of('.', 0);
	if (found != std::string::npos) {
		int j = n.length() - 1;
		while (n[j] == '0') {
			j--;
		}
		n.erase(j + 1, n.length() - 1);
	}
	//Remove trailing decimal point
	if (n[n.length()-1] == '.') {
		n.pop_back();
	}
	//Add a zero if n is .00001 -> 0.00001
	if (n[0] == '.') {
		n.insert(0, "0");
	}
	return n;
}

--------------------------------------------------------
