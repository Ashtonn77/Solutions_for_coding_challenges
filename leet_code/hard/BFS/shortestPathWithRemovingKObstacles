    public int findShortestPathWithRemovingObstacles(int[][] grid, int k){

        int N = grid.length;
        int M = grid[0].length;
        int[][] directions = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        int[][] lives = new int[N][M];
        
        for(var row : lives)
            Arrays.fill(row, -1);
        
        Queue<int[]> q = new LinkedList<>();
        q.offer(new int[]{0, 0, 0, k});
     
        while(!q.isEmpty()){

            int[] current = q.poll();
            int r = current[0];
            int c = current[1];

            if( r == N - 1 && c == M - 1 )
                return current[2];

            if(grid[r][c] == 1)
                --current[3];


            for(var direction : directions){

                int nr = r + direction[0];
                int nc = c + direction[1];

                if(nr >= 0 && nr < N && nc >= 0 && nc < M && lives[nr][nc] < current[3]){
                    q.offer(new int[]{nr, nc, current[2] + 1, current[3]});
                    lives[nr][nc] = current[3];
                }

            }


        }

        return -1;

  }
