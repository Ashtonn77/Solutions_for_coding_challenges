class Solution {
    public int minDays(int n) {
        
        Queue<Integer> q = new LinkedList<>();
        Map<Integer, Boolean> memo = new HashMap<>();
        int days = 0;
        
        q.offer(n);       
        
        while(!q.isEmpty()){
            
            days++;
            int size = q.size();
            for(int i = 0; i < size; i++){
                
                int value = q.poll();
                
                if(value == 1) return days;
                if(value % 3 == 0 && !memo.containsKey(value / 3)){
                    memo.put(value / 3, true);
                    q.offer(value / 3);
                }
                
                if(value % 2 == 0 && !memo.containsKey(value / 2)){
                    memo.put(value / 2, true);
                    q.offer(value / 2);
                }
                if(!memo.containsKey(value - 1)){
                    memo.put(value - 1, true);
                    q.offer(value - 1);
                }
                
            }
          
        }
        
        
         return days;
        
        
    }
}
