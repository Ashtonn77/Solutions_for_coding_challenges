/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

bool checkSymmetry(TreeNode *leftSide, TreeNode *rightSide){
    
        if(!leftSide || !rightSide){
            return leftSide == rightSide;
        }
        else if(leftSide->val != rightSide->val){
            return false;
        }
    
        return checkSymmetry(leftSide->left, rightSide->right) && checkSymmetry(leftSide->right, rightSide->left);
    
}

class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        
        return !root ? true : checkSymmetry(root->left, root->right);
        
    }
};
