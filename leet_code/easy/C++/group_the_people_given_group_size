vector<int> split(vector<int> &v, int n){
    vector<int> arr;
    while(n--){
        int temp = v.front();
        v.erase(v.begin());
        arr.push_back(temp);
    }
    return arr;
}

class Solution {
public:
    vector<vector<int>> groupThePeople(vector<int>& groupSizes) {
        int mx = *max_element(groupSizes.begin(), groupSizes.end());
        vector<vector<int> > vec;
        vector<vector<int> > temp;
        vector<int> v{};
        
        for(int i = 0; i < mx; i++){
            vec.push_back(v);
        }
        
        for(int i = 0; i < groupSizes.size(); i++){
            vec[groupSizes[i]-1].push_back(i);
        }
        
        for(int i = 0; i < vec.size(); i++){
            if(vec[i].size() < 1) continue;
            else{
                
                while(vec[i].size() > 0){
                    temp.push_back(split(vec[i], i+1));
                }
                
            }
        }
        
        return temp;
    }
};
