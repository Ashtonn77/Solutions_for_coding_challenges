/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

int height(TreeNode *root){
    if(root == NULL) return 0;
    int lh = height(root->left);
    int rh = height(root->right);
    return max(lh, rh) + 1;
}

int findDiameter(TreeNode *root){
    if(root == NULL) return 0;
    int lh = height(root->left);
    int rh = height(root->right);
    int dl = findDiameter(root->left);
    int dr = findDiameter(root->right);
    return max(lh+rh, max(dl,dr));
}

class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        return findDiameter(root);
    }
};
