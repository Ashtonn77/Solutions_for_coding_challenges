/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        
        if(!root) return {};
        
       vector<vector<int>> ans;
               
        queue<Node*> q;
        q.push(root);
        
        while(!q.empty())
        {
            
            int sz = q.size();
             vector<int> tmp;
            
            for(int i = 0; i < sz; i++)
            {
                
                Node *top_node = q.front();
                q.pop();
                tmp.push_back(top_node->val);
                
                for(auto child : top_node->children)
                {
                    q.push(child);
                }
                
            }
            
            ans.push_back(tmp;)
            
        }
        return ans;
        
    }
};