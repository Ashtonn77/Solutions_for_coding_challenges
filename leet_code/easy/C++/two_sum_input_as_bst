/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
        
        queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty())
        {
            
            TreeNode *cur = q.front();
            q.pop();
            
            TreeNode *sec = get_node(root, k - cur->val);
            
            if(sec && sec != cur) return true;
            
            if(cur->left) q.push(cur->left);
            if(cur->right) q.push(cur->right);            
            
        }
        
        return false;
        
    }
    
    TreeNode *get_node(TreeNode *root, int k)
    {
        
        TreeNode *temp = root;
        
        while(temp)
        {
            
            if(temp->val == k) return temp;
            
            else if(temp->val > k) temp = temp->left;
            
            else temp = temp->right;
            
        }
        
        return temp;
        
    }
    
};
