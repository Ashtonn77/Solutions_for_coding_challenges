/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        if(!l1 && !l2){
            return NULL;
        }
        
        if(!l1){
            return l2;
        }
        
        if(!l2){
            return l1;
        }
        
        ListNode *temp;
        ListNode *head_t;
        
        if(l1->val < l2->val){
            temp = l1;
            head_t = temp;
            l1 = temp->next;
        }
        else{
            temp = l2;
            head_t = temp;
            l2 = temp->next;
        }
        
        while(l1 && l2){
            
        if(l1->val < l2->val){
            temp->next = l1;
            temp = temp->next;
            l1 = temp->next;
        }
        else{
            temp->next = l2;
            temp = temp->next;
            l2 = temp->next;
        }
            
        }
        
        while(l1){
            temp->next = l1;
            temp = temp->next;
            l1 = temp->next;            
            
        }
        
        while(l2){
            
            temp->next = l2;
            temp = temp->next;
            l2 = temp->next;
            
        }
        
        return head_t;
        
    }
};
