/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
    
       
        ListNode *temp = headA;
        int cnt = 0;
        
        while(temp){
            
            cnt++;
            temp = temp->next;
            
        }  
     
        ListNode *temp_2 = headB;
        int cnt_2 = 0;
        
         while(temp_2){
             
             cnt_2++;
             temp_2 = temp_2->next;
             
         }
        
        temp_2 = headB;
        temp = headA;
        
        if(cnt > cnt_2){           
            
            cnt_2 = cnt - cnt_2;
            
            for(int i = 0; i < cnt_2; i++){
                
                temp = temp->next;
                
            }
            
                       
        }
        else{
            
            
            cnt = cnt_2 - cnt;
            
            for(int i = 0; i < cnt; i++){
                
                temp_2 = temp_2->next;
                
            }
            
            
        }
        
          
            while(temp != temp_2){
                
                temp = temp->next;
                temp_2 = temp_2->next;
                
            }
            
            return temp;       
        
        
        
    }
};
