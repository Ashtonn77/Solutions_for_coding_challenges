/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
       if(!head || !head->next) return true; 
        
       vector<int> sample;
        
        ListNode *temp = head;    
    
        while(temp){
            
            sample.push_back(temp->val);
            temp = temp->next;
            
        }
        
        reverse(sample.begin(), sample.end());
        
        temp = head;
        
        int i = 0;
        
        while(temp){
            
            if(temp->val != sample[i]) return false;
            temp = temp->next;
            i++;
        }
        
        
        return true;
        
    }
};
