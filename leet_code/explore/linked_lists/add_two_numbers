/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode *head = new ListNode(0);        
        ListNode *temp = head;
        
        int carry, rem, sum, l1v, l2v;
        carry = rem = sum = l1v = l2v = 0;
        
        while(l1 || l2){
            
            l1v = l1 ? l1->val : 0;
            l2v = l2 ? l2->val : 0;
            
            sum = l1v + l2v + carry;
            carry = sum / 10;
            rem = sum % 10;
            
            ListNode *new_node = new ListNode(rem);
            temp->next = new_node;
            
            if(l1) l1 = l1->next;
            if(l2) l2 = l2->next;
            temp = temp->next;            
            
        }
        
        if(carry > 0){
            
            ListNode *t = new ListNode(carry);
            temp->next = t;
            temp = temp->next;
            
        }
        
        return head->next;
        
    }
};
