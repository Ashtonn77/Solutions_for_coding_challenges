/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        
        Node *parent = root;
        Node *child_head = nullptr;
        Node *child = nullptr;
        
       while(parent){
           
           while(parent){
               
               
               if(parent->left){
                   
                   if(!child_head)
                       child_head = parent->left;
                   else
                       child->next = parent->left;
                   
                   child = parent->left;
               }
               
               
               if(parent->right){
                   
                   if(!child_head)
                       child_head = parent->right;
                   else
                       child->next = parent->right;
                   
                   child = parent->right;
               }               
               
               parent = parent->next;
               
           }           
           parent = child_head;
           child_head = child = nullptr;
       }        
        
        return root;
        
    }
    
};
