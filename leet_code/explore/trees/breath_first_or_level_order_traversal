/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        if(!root) return {};
        
        vector<vector<int>> result;
        
        vector<TreeNode*> queue;
        queue.push_back(root);
        
        while(!queue.empty()){
            
            int size = queue.size();
            vector<int> currentLevel;
            
            for(int i = 0; i < size; i++){
                
                TreeNode *cur = queue.front();
                queue.erase(queue.begin());
                
                currentLevel.push_back(cur->val);
                
                if(cur->left){
                    queue.push_back(cur->left);
                }
                
                if(cur->right){
                    queue.push_back(cur->right);
                }
                
            }
            
            result.push_back(currentLevel);
            
        }
        
        return result;
    }
};
