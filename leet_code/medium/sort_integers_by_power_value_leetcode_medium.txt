class Solution {
public:
    
    void swap(vector<int> &v, int i, int j)
    {
        int temp = v[i];
        v[i] = v[j];
        v[j] = temp;
    }
    
    int get_power(int n){
        
        int c = 0;
        while(n > 1)
        {
            if(n % 2 == 0)
                n /= 2;
            else
                n = 3 * n + 1;
            
            c++;
            
        }
        
        return c;
    }
    
    int getKth(int lo, int hi, int k) {
      
        
       
        vector<int> power;
        vector<int> val;
        
        for(int i = lo; i <= hi; i++){
            val.push_back(i);
            power.push_back(get_power(i));
        }
        
        
        for(int i = 0; i < power.size(); i++)
        {
            
            for(int j = i + 1; j < power.size(); j++)
            {
               if(power[j] == power[i]){
                    
                    if(val[j] < val[i]){
                        swap(val, i, j);
                    }
                    
                }
                
                else if(power[j] < power[i]){
                    swap(power, i, j);
                    swap(val, i, j);
                }
                
                
            }
            
        }
              
       
        
        return val[k - 1];
        
    }
};