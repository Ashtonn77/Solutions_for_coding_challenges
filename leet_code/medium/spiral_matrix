class Solution {
public:
    
    bool reached_limit(vector<int> v, int l){
    
    return v.size() >= l;
    
    }
    
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        
        if(matrix.empty()) return {};

        vector<int> output;

        int n = matrix.size();
        int m = matrix[0].size();

        int start_column = 0;
        int end_column = m - 1;

        int start_row = 0;
        int end_row = n - 1;

        int limit = m * n;


        while(start_column <= end_column && start_row <= end_row){


            //left to right
            for(int i = start_column; i <= end_column; i++){

                if(reached_limit(output, limit)) break;
                output.push_back(matrix[start_row][i]);

            }

            start_row++;


            //top to bottom
            for(int i = start_row; i <= end_row; i++){

                if(reached_limit(output, limit)) break;
                output.push_back(matrix[i][end_column]);

            }

            end_column--;


            //right to left
            for(int i = end_column; i >= start_column; i--){

                if(reached_limit(output, limit)) break;
                output.push_back(matrix[end_row][i]);

            }

            end_row--;


            //bottom to top
            for(int i = end_row; i >= start_row; i--){

                if(reached_limit(output, limit)) break;
                output.push_back(matrix[i][start_column]);

            }

            start_column++;

        }

        return output;

        
    }
};
