/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res = 0;
    int maxAncestorDiff(TreeNode* root) {
        
        helper(root);
        return res;        
        
    }
    
    vector<int> helper(TreeNode *root)
    {
        if(!root){ return {INT_MAX, INT_MIN}; }
        if(!root->left && !root->right){ return {root->val, root->val}; }
        
        vector<int> left = helper(root->left);
        vector<int> right = helper(root->right);
        
        
        int mn = min(left[0], right[0]);
        int mx = max(left[1], right[1]);
        
        res = max(res, max(abs(mn - root->val), abs(mx - root->val)));
        
        mn = min(mn, root->val);
        mx = max(mx, root->val);
        
        return {mn, mx};
        
    }
};

