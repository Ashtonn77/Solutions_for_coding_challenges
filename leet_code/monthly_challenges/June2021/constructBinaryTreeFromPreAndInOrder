class Solution {
    
    Map<Integer, Integer> map = new HashMap<>();
    
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        
        for(int i = 0; i < inorder.length; i++)
            map.put(inorder[i], i);
        
        return helper(0, 0, inorder.length - 1, preorder, inorder);
        
    }
    
    private TreeNode helper(int preStart, int inStart, int inEnd, int[] preArr, int[] inArr){
        
        
        if(preStart > preArr.length || inStart > inEnd) return null;
        
        TreeNode root = new TreeNode(preArr[preStart]);
        
        int idx = map.get(root.val);

        
        root.left = helper(preStart + 1, inStart, idx - 1, preArr, inArr);
        root.right = helper(preStart + idx - inStart + 1, idx + 1, inEnd, preArr, inArr);
        
        
        return root;
        
    }
    
    
}
