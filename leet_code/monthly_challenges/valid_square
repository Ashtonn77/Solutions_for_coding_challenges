class Solution {
public:
    
    int distance(int a, int b, int c, int d){ return pow(a - b, 2) + pow(c - d, 2); }
    
    bool validSquare(vector<int>& p1, vector<int>& p2, vector<int>& p3, vector<int>& p4) {
        
        vector<int> v = {distance(p1[0], p2[0], p1[1], p2[1]), distance(p1[0], p3[0], p1[1], p3[1]), 
                         distance(p1[0], p4[0], p1[1], p4[1]), distance(p2[0], p4[0], p2[1], p4[1]), 
                         distance(p2[0], p3[0], p2[1], p3[1]), distance(p3[0], p4[0], p3[1], p4[1])};
        
        map<int, int> m;
        
        for(auto i : v) m[i]++;
        
        
        if(m.size() != 2) return false;
        v = {};
        
        for(auto c : m)
            v.push_back(c.second);
        
        return abs(v[0] - v[1]) == 2;
        
    }
};
