#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

class Stack{
  
  public:  
  vector<int> stack;
  int el = 0;
 
  void push(int x)
  {
      stack.push_back(x);      
      el = max(el, x);
  
  }
  
  void pop()
  {
    
    int temp = stack.back();
    stack.pop_back();
    
    if(el == temp){
        if(!stack.empty()){     
        el = *max_element(stack.begin(), stack.end());
        }
        else{
            el = 0;
        }
    }    
    
  }
  
  int max_el()
  {    
   return el;
  }  
    
};


int main() {
   
    Stack s;
   
    int N = 0;
    cin >> N;
    
    
    while(N--)
    {
        int q = 0;
        cin >> q;
        
        switch(q)
        {
            
            case 1:
            {
                int x = 0;
                cin >> x;
                s.push(x);
                break;
            }
            
            case 2:
            
                s.pop();
                break;
                
            case 3:
            
                cout << s.max_el() << endl;
                break;
                
            default:
                break; 
            
        }
       
    }
   
    return 0;
}

