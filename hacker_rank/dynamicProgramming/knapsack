import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'unboundedKnapsack' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER k
     *  2. INTEGER_ARRAY arr
     */

    public static int unboundedKnapsack(int k, List<Integer> arr) {
            
            int _l = arr.size();
            int[][] out = new int[_l + 1][k + 1];
            
            
            for(int i = 1; i <= _l; i++){
                
                int currentValue = arr.get(i - 1);
                
                for(int j = 1; j <= k; j++){
                    
                    
                    if(j - currentValue< 0){
                        out[i][j] = out[i - 1][j];
                        continue;
                    }
                    
                    out[i][j] = Math.max(out[i][j - currentValue] + currentValue, out[i - 1][j]);
                    
                }
                                
            }
            
        return out[_l][k];

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        while(t > 0){
            
            String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

            int n = Integer.parseInt(firstMultipleInput[0]);
            
            int k = Integer.parseInt(firstMultipleInput[1]);

            List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                .map(Integer::parseInt)
                .collect(toList());

            int result = Result.unboundedKnapsack(k, arr);
            bufferedWriter.write(String.valueOf(result));
            bufferedWriter.newLine();

      
            t--;
                
        }
        
        bufferedReader.close();
        bufferedWriter.close();
    }
}

