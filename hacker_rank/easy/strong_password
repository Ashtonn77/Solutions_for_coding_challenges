#include <bits/stdc++.h>

using namespace std;

bool got_num(string s){
    for(auto c:s){
        if(isdigit(c)) return true;
    }
    return false;
}

bool got_upper(string s){
    for(auto c:s){
        if(isupper(c)) return true;
    }
    return false;
}

bool got_lower(string s){
    for(auto c:s){
        if(islower(c)) return true;
    }
    return false;
}

bool got_special(string s){
    
    string special = "!@#$%^&*()-+";
    for(auto c:s){
        if(special.find(c) != string::npos)
        return true;
    }
    return false;
}
// Complete the minimumNumber function below.
int minimumNumber(int n, string password) { 

    int cnt = 0;
    
    if(got_num(password)) cnt++;
    if(got_lower(password)) cnt++;  
    if(got_upper(password)) cnt++;
    if(got_special(password)) cnt++;  
    
    cnt = 4 - cnt;
    n = n >= 6 ? 0 : 6 - n;

    if(n == 0) return cnt;
    if(cnt == 0) return n;
    if(n > cnt) return n;
    if(cnt > n) return cnt;

    return cnt;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string password;
    getline(cin, password);

    int answer = minimumNumber(n, password);

    fout << answer << "\n";

    fout.close();

    return 0;
}

