#include<bits/stdc++.h>

using namespace std;

//Define the structs Workshops and Available_Workshops.
//Implement the functions initialize and CalculateMaxWorkshops
struct Workshop{

int start_time;
int duration;
int end_time;

};

struct Available_Workshops{

    int n;
    vector<Workshop> v;
    Available_Workshops(int &i){
        v = vector<Workshop>(i);
        n = i;
    }

};

bool compare(Workshop &w_1, Workshop &w_2){
    return w_1.end_time < w_2.end_time;
}

Available_Workshops *initialize(int start_time[], int duration[], int n){

    Available_Workshops *avail_work = new Available_Workshops(n);
    
    for(int i = 0; i < n; i++){

         avail_work->v[i].start_time = start_time[i];
         avail_work->v[i].duration = duration[i];
         avail_work->v[i].end_time = start_time[i] + duration[i];
    }
    sort(avail_work->v.begin(), avail_work->v.end(), compare);
    return avail_work;
}

int CalculateMaxWorkshops(Available_Workshops *ptr){

    int end_time = 0;
    int count = 0;

    for(int i = 0; i < ptr->n; i++){

        if(ptr->v[i].start_time >= end_time){

            end_time = ptr->v[i].end_time;
            count++;
        }

    }

    return count;

}


int main(int argc, char *argv[]) {
