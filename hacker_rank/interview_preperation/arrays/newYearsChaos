class Result {

    /*
     * Complete the 'minimumBribes' function below.
     *
     * The function accepts INTEGER_ARRAY q as parameter.
     */

    public static void minimumBribes(List<Integer> q) {
            
            int swaps = 0;
            int[] arr = q.stream().mapToInt(i -> i).toArray();
            
                       
            for(int i = arr.length-1; i >= 0; i--){
                
                if(arr[i] != i + 1){
                    
                    if(i - 1 >= 0 && arr[i - 1] == i + 1){
                            swap(arr, i, i - 1);
                            swaps++;
                            
                    }else if(i - 2 >= 0 && arr[i - 2] == i + 1){
                        swap(arr, i, i - 2);
                        swap(arr, i - 2, i - 1);
                        swaps += 2;
                        
                    }else{
                        System.out.println("Too chaotic");
                        return;
                    }                    
               
                }
                
            }            
            
            System.out.println(swaps);    
    }
    
    static void swap(int[] arr, int i, int j){
        
        int t = arr[i];
        arr[i] = arr[j];
        arr[j] = t;
    }
}

