#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <limits>
#include <set>
#include <fstream>

std::string findSum(std::string str1, std::string str2)
{

    if (str1.length() > str2.length())
        std::swap(str1, str2);


    std::string str = "";


    int n1 = str1.length(), n2 = str2.length();


    std::reverse(str1.begin(), str1.end());
    std::reverse(str2.begin(), str2.end());

    int carry = 0;
    for (int i=0; i<n1; i++)
    {

        int sum = ((str1[i]-'0')+(str2[i]-'0')+carry);
        str.push_back(sum%10 + '0');


        carry = sum/10;
    }


    for (int i=n1; i<n2; i++)
    {
        int sum = ((str2[i]-'0')+carry);
        str.push_back(sum%10 + '0');
        carry = sum/10;
    }


    if (carry)
        str.push_back(carry+'0');


    std::reverse(str.begin(), str.end());

    return str;
}



std::string test(){
    std::string str{};
    std::string x{};
    std::ifstream myFile;
    long long sum{0};

    myFile.open("test.txt");
    while (myFile >> x) {
      str += x;
    }

    int j{0};
    std::string s2{};
    std::string s3{};
    while(true){

        for(int i = 0; i < 50; i++){
        s2 += str[j];
        j++;
        }

        s3 = findSum(s3, s2);
        s2 = "";
        if(j >= (5000 - 1))break;
    }



    return s3.substr(0, 10);

}

int main()
{

        std::cout << test();

    return 0;
}




