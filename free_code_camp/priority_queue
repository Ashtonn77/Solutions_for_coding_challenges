
function PriorityQueue () {
  this.collection = [];
  this.printCollection = function() {
    console.log(this.collection);
  };
  // Only change code below this line
  this.enqueue = (new_item) => {
    
    if(this.isEmpty()){
      return this.collection.push(new_item);
    }
    this.collection = this.collection.reverse();

    let f = this.collection.findIndex( (item) => {
      return new_item[1] >= item[1];
    })
    if(f == -1){
      this.collection.push(new_item);
    }else{
      this.collection.splice(f,0, new_item);
    }
    this.collection = this.collection.reverse();
  }

  this.dequeue = function(){
    if(!this.isEmpty()){
      return this.collection.shift()[0]
    }
    else {
      return "The queue is empty.";
    }
  }

  this.size = function(){
    return this.collection.length
  }

  this.front = function(){
    return this.collection[0][0];
  }

  this.isEmpty = function(){
    return this.size() > 0 ? false : true;
  }
  // Only change code above this line
}

