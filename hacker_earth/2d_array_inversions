#include <iostream>
#include <vector>

using namespace std;

vector<long> flatten(vector<vector<long> > v){
    
  vector<long> res;
  for(auto i:v){
      res.insert(res.end(), i.begin(), i.end());
  }
  return res;
}

long count_(vector<long> v, long n){
    
    long cnt = 0;
    
    for(long i = 0; i < v.size()-1; i += n){
        
        for(long j = i + 1; j < v.size(); j++){
            if(v[i] > v[j]) cnt++;
        }
    }
    return cnt;
    
}


int main() {

vector<vector<long> > M;
vector<long> temp;
long sum = 0;
long T, N, f;
cin >> T;

for(long i = 0; i < T; i++){

	if(T == 0){
		cout << 0 << endl;
		break;
	}
	cin >> N;

	if(N == 0){
		cout << 0 << endl;
		break;
	}

	for(long j = 0; j < N; j++){

		for(long k = 0; k < N; k++){
			cin >> f;
			temp.push_back(f);
		}
		M.push_back(temp);
		temp = {};
	}
	
	for(int a = 0; a < N; a++){
		for(int b = 0; b < N; b++){
			for(int c = a; c < N; c++){
				for(int d = b; d < N; d++){
					if(M[c][d] < M[a][b]) sum++;
				}
			}
		}
	}
	cout << sum << endl;
	sum = 0;
	M = {};
}


}

