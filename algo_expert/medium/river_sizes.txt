#include <vector>
using namespace std;


int dfs(vector<vector<int>> &grid, int i, int j)
{
	
	if(i < 0 || i >= grid.size() || j < 0 || j >= grid[i].size() || grid[i][j] == 0)
	{
		return 0;
	}
	
	      grid[i][j] = 0;  			    
	
      return 1 + dfs(grid, i + 1, j) + dfs(grid, i - 1, j) +  dfs(grid, i, j + 1) + dfs(grid, i, j - 1);       
	
}

vector<int> riverSizes(vector<vector<int>> matrix) 
{
	
  vector<int> result;
	int size = 0;
	
	for(int i = 0; i < matrix.size(); i++)
	{
		
			for(int j = 0; j < matrix[i].size(); j++)
			{

					if(matrix[i][j] == 1)
					{
						size = dfs(matrix, i, j);
						result.push_back(size);					
					}

			}
		
	}	
	
  return result;
}
