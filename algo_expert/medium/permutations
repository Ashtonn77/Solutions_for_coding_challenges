**c++**
#include <vector>
using namespace std;

void helper(vector<int> &array, vector<int> curPerm, vector<vector<int>> &permutations)
{
		if(array.size() < 1 && curPerm.size() > 0)
		{
			permutations.push_back(curPerm);
		}
		else
		{
			for(int i = 0; i < array.size(); i++)
			{
				
				vector<int> newArr = array;
				newArr.erase(newArr.begin() + i);
				vector<int> newPerm = curPerm;
				newPerm.push_back(array[i]);
				
				helper(newArr, newPerm, permutations);
				
			}
			
		}	
	
}

vector<vector<int>> getPermutations(vector<int> array) {
  vector<vector<int>> permutations;
	helper(array, {}, permutations);		
  return permutations;
}

**python**
def getPermutations(array):
    perms = []
	helper(array, [], perms)
	return perms

def helper(array, perm, perms):
	if not len(array) and len(perm):
		perms.append(perm)
		
	else:
		for i in range(len(array)):
			newArr = array[:i] + array[i + 1:]
			newPerm = perm + [array[i]]
			
			helper(newArr, newPerm, perms)

