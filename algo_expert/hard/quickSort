import java.util.*;

class Program {
  public static int[] quickSort(int[] array) {
    
		quickSortHelper(array, 0, array.length - 1);
		return array;		
		
  }
	
	static void quickSortHelper(int[] array, int startIdx, int endIdx){
		
		if(startIdx >= endIdx)
			return;
		
		int pivotIdx = startIdx;
		int leftIdx = startIdx + 1;
		int rightIdx = endIdx;
		
		while(rightIdx >= leftIdx){
						
			if(array[leftIdx] > array[pivotIdx] && array[rightIdx] < array[pivotIdx])
				swap(array, rightIdx, leftIdx);
			
			if(array[leftIdx] <= array[pivotIdx])
				leftIdx++;
			
			if(array[rightIdx] >= array[pivotIdx])
				rightIdx--;
			
		}
		
		swap(array, rightIdx, pivotIdx);
		boolean leftSubArrayIsSmaller = rightIdx - 1 - startIdx < endIdx - (rightIdx + 1);
		
		if(leftSubArrayIsSmaller){
			
			quickSortHelper(array, startIdx, rightIdx - 1);
			quickSortHelper(array, rightIdx + 1, endIdx);
			
		}else{
			
			quickSortHelper(array, rightIdx + 1, endIdx);
			quickSortHelper(array, startIdx, rightIdx - 1);
			
		}		
		
		
	}
	
	static void swap(int[] arr, int i, int j){
		
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
		
	}
	
}

